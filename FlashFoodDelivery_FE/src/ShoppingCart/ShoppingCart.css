src/components/ShoppingCart.js

import React, { useState } from 'react';
import ShoppingCartItem from './ShoppingCartItem';
import ShoppingCartSummary from './ShoppingCartSummary';
import './ShoppingCart.css';

const initialItems = [
    { id: 1, name: 'Chicken Cheese', description: 'Deliciously Cheesy Chicken Delight!', price: 18, quantity: 1, image: 'cheese.jpg' },
    { id: 2, name: 'Chicken Mix', description: 'Mix It Up with Flavorful Chicken Bliss!', price: 23, quantity: 1, image: 'chickenmix.jpg' },
    { id: 3, name: 'Burger Chicken', description: 'Clucking Good Chicken Burgers!', price: 15, quantity: 1, image: 'ga.jpg' },
];

const ShoppingCart = () => {
    const [items, setItems] = useState(initialItems);
    const [shipping, setShipping] = useState(5);

    const handleAdd = (id) => {
        setItems(items.map(item => item.id === id ? { ...item, quantity: item.quantity + 1 } : item));
    };/* src/components/ShoppingCart.css */

    .shopping-cart {
        display: flex;
        justify-content: space-between;
        padding: 20px;
    }
    
    .cart-items, .shopping-cart-summary {
        width: 45%;
    }
    
    .cart-items {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
    }
    
    .cart-items h2 {
        margin-bottom: 20px;
    }
    
    .shopping-cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    
    .item-details {
        display: flex;
        align-items: center;
    }
    
    .item-image {
        width: 50px;
        height: 50px;
        margin-right: 20px;
    }
    
    .item-quantity {
        display: flex;
        align-items: center;
    }
    
    .item-quantity button {
        width: 30px;
        height: 30px;
        background: #ccc;
        border: none;
        cursor: pointer;
    }
    
    .item-quantity span {
        margin: 0 10px;
    }
    
    .item-price {
        font-size: 1.2em;
        font-weight: bold;
    }
    
    .delete-button {
        background: #ff4d4d;
        color: #fff;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
    }
    
    .back-to-shop {
        display: block;
        margin-top: 20px;
        background: #ccc;
        padding: 10px;
        text-align: center;
        text-decoration: none;
        color: #000;
        border-radius: 8px;
    }
    
    .shopping-cart-summary {
        background-color: #f7f7f7;
        padding: 20px;
        border-radius: 8px;
    }
    
    .shopping-cart-summary h3 {
        margin-bottom: 20px;
    }
    
    .shopping-cart-summary p {
        margin-bottom: 10px;
    }
    
    .shopping-cart-summary label {
        display: block;
        margin-bottom: 5px;
    }
    
    .shopping-cart-summary input, .shopping-cart-summary select {
        width: 100%;
        padding: 10px;
        margin-bottom: 20px;
    }
    
    .shopping-cart-summary button {
        width: 100%;
        padding: 15px;
        background: #000;
        color: #fff;
        border: none;
        cursor: pointer;
        border-radius: 8px;
    }
    

    const handleRemove = (id) => {
        setItems(items.map(item => item.id === id && item.quantity > 1 ? { ...item, quantity: item.quantity - 1 } : item));
    };

    const handleDelete = (id) => {
        setItems(items.filter(item => item.id !== id));
    };

    const handleCheckout = () => {
        alert('Checkout successful!');
    };

    const totalPrice = items.reduce((total, item) => total + item.price * item.quantity, 0);

    return (
        <div className="shopping-cart">
            <div className="cart-items">
                <h2>Shopping Cart</h2>
                {items.map(item => (
                    <ShoppingCartItem
                        key={item.id}
                        item={item}
                        onAdd={handleAdd}
                        onRemove={handleRemove}
                        onDelete={handleDelete}
                    />
                ))}
                <button className="back-to-shop">Back to shop</button>
            </div>
            <ShoppingCartSummary
                items={items}
                totalPrice={totalPrice}
                shipping={shipping}
                onCheckout={handleCheckout}
            />
        </div>
    );
}

export default ShoppingCart;
